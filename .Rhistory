<<<<<<< HEAD
dat[dat$Offense.Type == 1,][1]
row(dat[dat$Offense.Type == 1,])
dat[dat$Offense.Type == 1,][0]
dat_clean <- dat[-(dat[dat$Offense.Type == 1,]), ]
index(dat[dat$Offense.Type == 1,])
dat_clean <- dat[-(dat$Offense.Type == 1), ]
View(dat_clean)
View(dat_clean)
dat[dat$Offense.Type == 1,]
View(dat_clean)
View(dat_clean)
dat_clean <- dat[-(dat$Offense.Type == 1), ]
dat_clean[dat_clean$Offense.Type == 1,]
dat[dat$Offense.Type == 1,] <- NULL
dat[-(dat$Offense.Type == 1), ]
dat[(dat$Offense.Type == 1), ]
clean <- dat[-(dat$Offense.Type == 1), ]
unique(clean$Offense.Type)
unique(dat$Offense.Type)
unique(clean$Offense.Type)
unique(dat$Offense.Type)
clean <- dat[-(dat$Offense.Type == 1)-1, ]
unique(clean$Offense.Type)
c <- (1023,1022,1021)
clean <- dat[c, ]
c <- (1023,1022,1021)
c <- ("1023","1022","1021")
c <- c("1023","1022","1021")
c <- c(1023,1022,1021)
clean <- dat[c, ]
View(clean)
View(clean)
unique(clean$Offense.Type)
dat[(clean$Offense.Type == 1), ]
clean[(clean$Offense.Type == 1), ]
clean <- clean[-(clean$Offense.Type == 1), ]
clean
View(clean)
View(clean)
dat <- read.xls(fc, sheet = 1, header = TRUE, verbose=FALSE, perl=perldir, na.strings = "UNK")
dat_clean <- dat[-(dat$Offense.Type == 1), ]
View(dat_clean)
View(dat_clean)
View(clean)
View(clean)
clean[clean$Offense.Type == 1,]
View(dat_clean)
View(dat_clean)
dat_clean[dat_clean$Offense.Type == 1,]
dat_clean <- dat[-(dat$Offense.Type == 1), ]
dat_clean[dat_clean$Offense.Type == 1,]
clean[clean$Offense.Type == 1,]
dat[which(dat$Offense.Type == 1), ] <-  NULL
subset(dat, dat$Offense.Type == 1)
subset(dat, dat$Offense.Type != 1)
dat_clean <- subset(dat, dat$Offense.Type != 1)
View(dat_clean)
View(dat_clean)
dat_clean[dat_clean$Offense.Type == 1,]
dat_clean[dat_clean$Offense.Type == 1,]
dat[!grep("^[0-9]{4}-[0-9]{2}-[0-9]{2}$", dat$Date),]
dat[dat$Hour < 0 | dat$Hour > 23,]
dat[!grep("^[0-9]{2}$", dat$Hour),]
dat <- subset(dat, dat$Offense.Type != 1)
unique(dat$Beat)
nrow(dat[is.na(dat$Beat),])
View(dat)
View(dat)
unique(dat$BlockRange)
nrow(dat[is.na(dat$BlockRange),])
unique(dat$Type)
nrow(dat[dat$Type == "-",])
unique(dat$Suffix)
nrow(dat[dat$Suffix == "-",])
unique(dat$X..offenses)
library(gdata)
perldir <- Sys.which("perl")
if (perldir == "" & .Platform$OS.type == "windows")
perldir <- "C:\\Perl64\\bin\\perl.exe"
fc <- "crime.xls"
dat <- read.xls(fc, sheet = 1, header = TRUE, verbose=FALSE, perl=perldir)
unique(dat$Offense.Type)
unique(dat$Beat)
unique(dat$Hour)
library(lubridate)
library(xts)
library(dplyr)
dat <- tbl_df(dat)
datxts <- xts(dat, ymd_h(paste(dat$Date,' ',dat$Hour)))
i1 <- filter(dat, 8 <= dat$Hour, dat$Hour < 12)
datxts <- xts(dat, ymd_h(paste(dat$Date,' ',dat$Hour)))
i1 <- filter(dat, 8 <= dat$Hour, dat$Hour < 12)
unique(dat$Hour)
i1 <- filter(dat, 8 <= dat$Hour, dat$Hour < 12)
i2 <- filter(dat, 12 <= dat$Hour, dat$Hour < 19)
i3 <- filter(dat, (19 <= dat$Hour & dat$Hour <= 23) | (0 <= dat$Hour & dat$Hour < 8))
i1 <- filter(dat, 8 <= dat$Hour & dat$Hour < 12)
i2 <- filter(dat, 12 <= dat$Hour & dat$Hour < 19)
i1
i1 <- filter(dat, 8 <= dat$Hour, dat$Hour < 12)
i2
i3
sum1 <- group_by(i1, Beat) %>% summarise(num=sum(X..offenses))
sum2 <- group_by(i2, Beat) %>% summarise(num=sum(X..offenses))
sum3 <- group_by(i3, Beat) %>% summarise(num=sum(X..offenses))
install.packages("magrittr")
sum1 <- group_by(i1, Beat) %>% summarise(num=sum(X..offenses))
library(magrittr)
sum1 <- group_by(i1, Beat) %>% summarise(num=sum(X..offenses))
library(lubridate)
library(xts)
library(dplyr)
sum1 <- group_by(i1, Beat) %>% summarise(num=sum(X..offenses))
library(dplyr)
install.packages("dplyr")
library(dplyr)
sum1 <- group_by(i1, Beat) %>% summarise(num=sum(X..offenses))
help(paste)
dat$Date,' ',dat$Hour
paste(dat$Date,' ',dat$Hour)
ymd_h(paste(dat$Date,' ',dat$Hour))
help(xts)
help(filter)
datxts <- xts(dat, ymd_h(paste(dat$Date,' ',dat$Hour)))
i1 <- filter(datxts, 8 <= dat$Hour & dat$Hour < 12)
help(xts)
i1
i2
nrow(i1[is.na(i1),])
nrow(i1[is.na(i1)])
nrow(i1[is.na(i1)])
i1[is.na(i1)]
ncol(i1[is.na(i1)])
View(datxts)
View(datxts)
unique(dat$Hour)
unique(dat$Date)
library(lubridate)
library(xts)
library(dplyr)
dat <- tbl_df(dat)
=======
pt <- read.csv("http://www.football-data.co.uk/mmz4281/1516/P1.csv")
pt
View(pt)
View(pt)
View(pt)
View(pt)
pt <- read.csv("http://www.football-data.co.uk/mmz4281/1516/P1.csv")
pt <- read.csv("http://www.football-data.co.uk/mmz4281/1617/P1.csv")
install.packages("DMwR")
1 + 3/5 * 6^2
?rnorm
rnorm(5, mean = 30, sd = 10)
rnorm(5, mean = 30, sd = 10)
1 + 3/5 * 6^2
rnorm(5, mean = 30, sd = 10)
rnorm(5, mean = 30, sd = 10)
mean(sample(1:1000, 30))
mean(sample(1:1000, 30))
mean(sample(1:1000, 30))
mean(sample(1:1000, 30))
?sample
plot(sample(1:10, 5), sample(1:10, 5), main = "Drawing 5 random points", xlab = "X", ylab = "Y")
r == lodo
r == lodo
"r" == "lodo"
euro2dollar <- function(p, tx = 1.34) p * tx
euro2dollar(123)
prices <- c(32.4, 35.4, 30.2, 35, 31.99)
prices <- c(worten = 32.4, fnac = 35.4, mediaMkt = 30.2, radioPop = 35, pixmania = 31.99
prices <- c(worten = 32.4, fnac = 35.4, mediaMkt = 30.2, radioPop = 35, pixmania = 31.99)
prices <- c(worten = 32.4, fnac = 35.4, mediaMkt = 30.2, radioPop = 35, pixmania = 31.99)
c
priceas
prices
prices$fnac
prices.fnac
prices$$fnac
prices$fnac
prices["fnac"]
barplot(prices)
barplot(euro2dollar(prices))
barplot(euro2dollar(prices)-10)
barplot(euro2dollar(prices)+30)
barplot(euro2dollar(prices))
prices[c(2,4)]
prices[prices > mean(prices)]
prices2 <- c(worten=32.5,fnac=34.6,mediaMkt=32, radioPop=34.4,pixmania=32.1)
(prices+prices2)/2
prices > 35
prc <- matrix(c(32.40,35.40,30.20, 35.00, 31.99, 32.50, 34.60, 32.00, 34.40, 32.01), nrow=2,ncol=5,byrow=TRUE)
view(prc)
View(prc)
View(prc)
colnames(prc) <- c("worten","fnac","mediaMkt","radioPop","pixmania")
colnames(prc) <- c("porto", "lisboa")
rownames(prc) <- c("porto", "lisboa")
prc
a <- array(1:18, dim = c(3, 2, 3))
lst <- list(id=12323,name="John Smith", grades=c(13.2,12.4,5.6))
View(lst)
lst$grades
lst
lst[[2]]
lst[2]
stud <- data.frame(
nrs=c("43534543","32456534"), names=c("Ana","John"), grades=c(13.4,7.2))
edit(stud)
packages.install("dplyr")
install.packages("dplyr")
library(dplyr)
data(iris)
ir
ir <- tbl_df(iris)
ir
?dplyr.filter
?filter
?select
?arrange
arrange(ir, Sepal.Length, sl)
arrange(ir, Sepal.Length, "sl")
count(ir)
arrange(ir, Sepal.Length, "sl")
arrange(ir, Sepal.Length)
arrange(ir, Sepal.Length, Petal.Width)
arrange(ir, Petal.Width)
?mutate
mutate(ir, banana = 0)
ir
mutate(ir, banana = 0)
transmute(ir, banana = 0)
transmute(ir, Sepal.Width, banana = 0)
?summarize
summarize(ir, mean(Sepal.Length))
ir
summarize(group_by(ir, Species), m = mean(Sepal.Length), sd = sd(Sepal.Length))
select(ir,-(Sepal.Length:Sepal.Width))
select(ir,starts_with("Sepal"))
arrange(
select(
filter(
mutate(ir,sr=Sepal.Length/Sepal.Width), sr > 1.6), Sepal.Length,Species),
Species,desc(Sepal.Length))
mutate(ir,sr=Sepal.Length/Sepal.Width) %>%
filter(sr > 1.6) %>% select(Sepal.Length,Species) %>%
arrange(Species,desc(Sepal.Length))
sps <- group_by(ir,Species)
sps
group_by(ir,Species) %>% summarise(mPL=mean(Petal.Length))
install.packages("lubridate")
install.packages("xts")
library(lubridate)
library(xts)
sp500 <- xts(c(1102.94,1104.49,1115.71,1118.31),
ymd(c("2010-02-25","2010-02-26","2010-03-01","2010-03-02")))
sp500
sp500["2010-02-26/2010-03-01"]
plot(sp500)
?last
last(sp500, n=1)
last(sp500, n=2)
dat <- data.frame(x=rnorm(10),y=rnorm(10))
head(dat)
install.packages("stringr")
install.packages("stringr")
d <- readLines(url("https://archive.ics.uci.edu/ml/machine-learning-databases/heart-disease/heart-disease.names"))
d <- str_trim(d)
d
tgtLines <- sapply(1:76,function(i) d[grep(paste0("^",i),d)[1]]) head(tgtLines,2)
tgtLines <- sapply(1:76,function(i) d[grep(paste0("^",i),d)[1]])
head(tgtLines, 2)
nms <- str_split_fixed(tgtLines," ",2)[,2]
head(nms,2)
d <- readLines(url("https://archive.ics.uci.edu/ml/machine-learning-databases/heart-disease/heart-disease.names"))
nms <- str_split_fixed(tgtLines," ",2)[,2]
nms <- strsplit(tgtLines," ",2)[,2]
head(tgtLines, 2)
nms <- str_split_fixed(tgtLines," ",2)[,2]
library(stringr)
e
nms <- str_split_fixed(tgtLines," ",2)[,2]
NMS
nms
head(nms,2)
nms <- str_split_fixed(nms,":",2)[,1] head(nms,2)
nms <- str_split_fixed(nms,":",2)[,1]
head(nms,2)
tgtLines <- sapply(1:76,function(i) d[grep(paste0("^",i),d)[1]])
head(tgtLines, 2)
nms <- str_split_fixed(tgtLines," ",2)[,2]
head(nms,2)
head(nms,2)
nms <- str_split_fixed(nms,":",2)[,1]
head(nms,2)
nms
par(col='red')
plot(1:10, f(1:10))
f <- function (x) { return x }
f <- function (x) { x }
plot(1:10, f(1:10))
plot(1:10, f(1:10), col='red')
install.packages(quantmod)
install.packages("quantmod")
getSymbols('^GSPC',from='2016-01-01')
library(quantmod)
getSymbols('^GSPC',from='2016-01-01')
candleChart(GSPC )
head(cl(GSPC))
candleChart(GSPC )
head(Cl(GSPC))
head(Delt(Cl(GSPC)))
pca <- princomp(iris[,-5])
loadings(pca)
plot(scs,col=as.numeric(iris$Species), pch=as.numeric(iris$Species))
scs <- pca$scores[,1:2]
plot(scs,col=as.numeric(iris$Species), pch=as.numeric(iris$Species))
legend('topright',levels(iris$Species), pch=1:3,col=1:3)
biplot(pca)
data(Boston,package='MASS')
idx <- sample(1:nrow(Boston),as.integer(0.7*nrow(Boston)))
smpl <- Boston[idx,] rmng <- Boston[-idx,] nrow(smpl)
rmng <- Boston[-idx,] nrow(smpl)
smpl <- Boston[idx,]
rmng <- Boston[-idx,] nrow(smpl)
rmng <- Boston[-idx,]
nrow(smpl)
nrow(rmng)
quantile(algae$mxPH,na.rm=TRUE, probs=c(0.1,0.9))
mean(algae$oPO4)
data(algae)
library(DMwR)
data(algae)
mean(algae$oPO4)
quantile(algae$mxPH,na.rm=TRUE, probs=c(0.1,0.9))
IQR(algae$oPO4)
IQR(algae$oPO4, rm.na = TRUE)
iqr(algae)
IQR(x = algae$oPO4, na.rm = TRUE)
alg %>% summarise(avg.oPO4=mean(oPO4,na.rm=TRUE),
med.oPO4=median(oPO4,na.rm=TRUE),
cen.season=centralValue(season),
cen.Chla=centralValue(Chla))
alg <- tbl_df(algae)
library(dplyr)
alg <- tbl_df(algae)
alg %>% summarise(avg.oPO4=mean(oPO4,na.rm=TRUE),
med.oPO4=median(oPO4,na.rm=TRUE),
cen.season=centralValue(season),
cen.Chla=centralValue(Chla))
fivenum(algae$NH4)
summarize(algae$NH4)
summarize(algae$NH4)
summary(algae$NH4)
install.packages("hmisc")
install.packages("Hmisc")
describe(algae)
describe(algae)
library(Hmisc)
describe(algae)
apply(algae[,c('a1','a7')],2,max)
?apply
by(algae$a1,algae$season,summary)
?by
p
plot(seq(0,4*pi,0.1),sin(seq(0,4*pi,0.1)))
is.numeric(9)
hist(algae$mxPH,main='The Histogram of mxPH (maximum pH)',
xlab='mxPH Values',prob=T)
lines(density(algae$mxPH,na.rm=T))
density(algae$mxPH,na.rm=T)
rug(algae$mxPH)
plot(ecdf(algae$NO3), main='Cumulative Distribution Function of NO3',xlab='NO3 values')
plot(ecdf(algae$NO3), main='Cumulative Distribution Function of NO3',xlab='NO3 values')
library(car)
install.packages("car")
library(car)
qqPlot(algae$mxPH,main='QQ Plot of Maximum PH Values')
q.x <- quantile(algae$mxPH,c(0.25,0.75),na.rm=TRUE)
q.z <- qnorm(c(0.25,0.75))
b <- (q.x[2] - q.x[1])/(q.z[2] - q.z[1])
a <- q.x[1] - b * q.z[1]
ggplot(algae,aes(sample=mxPH)) + stat_qq() + ggtitle('QQ Plot of Maximum PH Values') + geom_abline(intercept=a,slope=b,color="red")
q.x
?qnorm
boxplot(algae$mnO2,ylab='Minimum values of O2')
algae$speed <- factor(algae$speed,levels=c("low","medium","high"))
ggplot(algae,aes(x=a3)) + geom_histogram(binwidth=5) + facet_wrap(~ speed) + ggtitle("Distribution of A3 by River Speed")
algae$speed <- factor(algae$speed,levels=c("low","medium","high"))
ggplot(algae,aes(x=a3)) + geom_histogram(binwidth=5) + facet_wrap(~ speed) + ggtitle("Distribution of A3 by River Speed")
algae$season <- factor(algae$season,levels=c("spring","summer","autumn","winter"))
ggplot(algae,aes(x=a3)) + geom_histogram(binwidth=5) + facet_grid(speed~season) + ggtitle('Distribution of a3 as a function of River Speed and Season')
boxplot(a6 ~ season,algae, main='Distribution of a6 as a function of Season', xlab='Season',ylab='Distribution of a6')
iris$Species
iris$Species ~ .
iris$Species ~ iris$Sepal.Length
?~
a
ggplot(algae,aes(x=a4,y=Chla)) + geom_point() + facet_wrap(~season)
install.packages("GGally")
library(GGally)
library(GGally)
ggpairs(algae,columns=12:16, diag=list(continuous="density", discrete="bar"),axisLabels="show")
cols <- which(colnames(algae) %in% c("season","speed","a1","a2"))
ggpairs(algae,columns=cols,axisLabels="show")
ggparcoord(algae,columns=12:16,groupColumn="speed")
trueVals <- c("c1","c1","c2","c1","c3","c1","c2","c3","c2","c3")
preds <- c("c1","c2","c1","c3","c3","c1","c1","c3","c1","c2")
confMatrix <- table(trueVals,preds)
confMatrix
errorRate <- 1-sum(diag(confMatrix))/sum(confMatrix)
errorRate
sq <- function(sq) { sq * sq}
sq <- function(sq) { sq * sq}
sq(3)
apply(c(1,2,3), sq)
apply(c(1,2,3), sq)
apply(c(1,2,3), 1, sq)
apply(c(1,2,3), 1, sq)
qspp
apply(c(1,2,3), 0, sq)
apply(c(1,2,3), 0, sq)
sp <- sample(1:150,100)
tr <- iris[sp,]
ts <- iris[-sp,]
l <- lda(Species ~ ., tr)
library(MASS)
l <- lda(Species ~ ., tr)
preds <- predict(l,ts)
(mtrx <- table(preds$class,ts$Species))
(err <- 1-sum(diag(mtrx))/sum(mtrx))
library(readxl)
dataset <- read_excel("C:/Users/Miguel/Source/Repos/DMI-Part1/crime.xls",
col_types = c("date", "text", "text",
"text", "text", "text", "text", "text",
"text", "numeric"))
View(dataset)
load("gps.RData")
View(gps)
tr <- gps[!incomplete,1:2]
incomplete <- is.na(dat$Beat)
dat <- read.xls(fc, sheet = 1, header = TRUE, verbose=FALSE, perl=perldir, na.strings = "UNK")
dat$BlockRange <- as.character(dat$BlockRange)
dat$StreetName <- as.character(dat$StreetName)
dat$Type <- as.character(dat$Type)
dat$Suffix <- as.character(dat$Suffix)
library(gdata)
library(gdata)
library(lubridate)
library(xts)
library(gdata)
library(lubridate)
library(xts)
library(dplyr)
library(lubridate)
library(xts)
library(dplyr)
library(stringr)
library(stringr)
library(DMwR)
library(class)
perldir <- Sys.which("perl")
fc <- "crime.xls"
dat <- read.xls(fc, sheet = 1, header = TRUE, verbose=FALSE, perl=perldir, na.strings = "UNK")
dat <- read.xls(fc, sheet = 1, header = TRUE, verbose=FALSE, perl=perldir, na.strings = "UNK")
dat$BlockRange <- as.character(dat$BlockRange)
dat$StreetName <- as.character(dat$StreetName)
dat$Type <- as.character(dat$Type)
library(lubridate)
setwd("C:/Users/Miguel/Source/Repos/DMI-Part1")
library(gdata)
library(xts)
library(dplyr)
library(DMwR)
library(class)
perldir <- Sys.which("perl")
fc <- "crime.xls"
dat <- read.xls(fc, sheet = 1, header = TRUE, verbose=FALSE, perl=perldir, na.strings = "UNK")
dat <- read.xls(fc, sheet = 1, header = TRUE, verbose=FALSE, perl=perldir, na.strings = "UNK")
dat$BlockRange <- as.character(dat$BlockRange)
dat$StreetName <- as.character(dat$StreetName)
dat$Type <- as.character(dat$Type)
dat$Suffix <- as.character(dat$Suffix)
load("gps.RData")
incomplete <- is.na(dat$Beat)
tr <- gps[!incomplete,1:2]
ts <- gps[incomplete,1:2]
dat$Beat[incomplete] <- knn(tr, ts, dat$Beat[!incomplete], k = 3)
dat <- tbl_df(dat)
datxts <- xts(dat, ymd_h(paste(dat$Date,' ',dat$Hour)))
library(lubridate)
>>>>>>> 1bdcc1288775c74c48956a506f542de1923a2210
datxts <- xts(dat, ymd_h(paste(dat$Date,' ',dat$Hour)))
i1 <- filter(dat, 8 <= dat$Hour, dat$Hour < 12)
i2 <- filter(dat, 12 <= dat$Hour, dat$Hour < 19)
i3 <- filter(dat, (19 <= dat$Hour & dat$Hour <= 23) | (0 <= dat$Hour & dat$Hour < 8))
<<<<<<< HEAD
View(i1)
View(i1)
sum1 <- group_by(i1, Beat) %>% summarise(num=sum(X..offenses))
sum2 <- group_by(i2, Beat) %>% summarise(num=sum(X..offenses))
sum3 <- group_by(i3, Beat) %>% summarise(num=sum(X..offenses))
View(sum1)
View(sum1)
View(sum1)
View(sum1)
View(sum2)
View(sum2)
group_by(i1, Beat)
help(table)
group_by(dat$Offense.Type, dat$X..offenses)
group_by(Offense.Type, X..offenses)
group_by(dat, Offense.Type)
group_by(dat, Offense.Type) %>% summarise(num=sum(X..offenses))
sum4 <- group_by(dat, Offense.Type) %>% summarise(num=sum(X..offenses))
barplot(sum4)
help(barplot)
as.matrix(sum4)
barplot(as.matrix(sum4))
dat <- subset(dat, dat$Offense.Type != 1)
datxts <- xts(dat, ymd_h(paste(dat$Date,' ',dat$Hour)))
i1 <- filter(dat, 8 <= dat$Hour, dat$Hour < 12)
i2 <- filter(dat, 12 <= dat$Hour, dat$Hour < 19)
i3 <- filter(dat, (19 <= dat$Hour & dat$Hour <= 23) | (0 <= dat$Hour & dat$Hour < 8))
sum1 <- group_by(i1, Beat) %>% summarise(num=sum(X..offenses))
sum2 <- group_by(i2, Beat) %>% summarise(num=sum(X..offenses))
sum3 <- group_by(i3, Beat) %>% summarise(num=sum(X..offenses))
sum4 <- group_by(dat, Offense.Type) %>% summarise(num=sum(X..offenses))
barplot(as.matrix(sum4))
as.matrix(sum4)
barplot(as.matrix(sum4)[2])
as.matrix(sum4)[2]
as.matrix(sum4)[2,]
as.matrix(sum4)[, 2]
barplot(as.matrix(sum4)[, 2])
barplot(as.matrix(sum4)[, 2], as.matrix(sum4)[, 1])
as.matrix(sum4)[, 1]
plot(as.matrix(sum4)[, 2], as.matrix(sum4)[, 1])
plot(as.matrix(sum4)[, 2] ~ as.matrix(sum4)[, 1])
as.matrix(sum4)[, 1]
as.matrix(sum4)[, 2]
plot(strtoi(as.matrix(sum4)[, 2]) ~ as.matrix(sum4)[, 1])
strtoi(as.matrix(sum4)[, 2])
as.matrix(sum4)[, 1]
plot(strtoi(as.matrix(sum4)[, 2]), as.matrix(sum4)[, 1])
as.matrix(sum4)
plot(strtoi(as.matrix(sum4)$num), as.matrix(sum4)$Offense.Type)
sum4 <- group_by(dat, Offense.Type) %>% summarise(num=sum(X..offenses))
sum4
plot(sum4$num ~ sum4$Offense.Type)
barplot(sum4$num ~ sum4$Offense.Type)
plot(sum4$num ~ sum4$Offense.Type)
library(gdata)
perldir <- Sys.which("perl")
if (perldir == "" & .Platform$OS.type == "windows")
perldir <- "C:\\Perl64\\bin\\perl.exe"
fc <- "crime.xls"
dat <- read.xls(fc, sheet = 1, header = TRUE, verbose=FALSE, perl=perldir)
unique(dat$Offense.Type)
dat <- subset(dat, dat$Offense.Type != 1)
unique(dat$Beat)
unique(dat$Hour)
library(lubridate)
library(xts)
library(dplyr)
dat <- tbl_df(dat)
datxts <- xts(dat, ymd_h(paste(dat$Date,' ',dat$Hour)))
i1 <- filter(dat, 8 <= dat$Hour, dat$Hour < 12)
i2 <- filter(dat, 12 <= dat$Hour, dat$Hour < 19)
i3 <- filter(dat, (19 <= dat$Hour & dat$Hour <= 23) | (0 <= dat$Hour & dat$Hour < 8))
sum1 <- group_by(i1, Beat) %>% summarise(num=sum(X..offenses))
sum2 <- group_by(i2, Beat) %>% summarise(num=sum(X..offenses))
sum3 <- group_by(i3, Beat) %>% summarise(num=sum(X..offenses))
sum4 <- group_by(dat, Offense.Type) %>% summarise(num=sum(X..offenses))
plot(sum4$num ~ sum4$Offense.Type)
sum4
plot(sum4$num ~ sum4$Offense.Type, xlab = "Offense.Type", ylab = "Num", pch=4, main = "Number of offenses (per offense)")
plot(sum4$num ~ sum4$Offense.Type, xlab = "Offense.Type", ylab = "Num", pch=20, main = "Number of offenses (per offense)")
plot(sum4$num ~ sum4$Offense.Type, xlab = "Offense.Type", ylab = "Num", main = "Number of offenses (per offense)")
plot(sum4$num, sum4$Offense.Type, xlab = "Offense.Type", ylab = "Num", main = "Number of offenses (per offense)")
plot(sum4$num ~ sum4$Offense.Type, xlab = "Offense.Type", ylab = "Num", main = "Number of offenses (per offense)")
sum5 <- group_by(dat, Offense.Type, Beat)
sum 5
sum()
sum5
sum5 <- group_by(dat, Offense.Type, Beat) %>% summarise(num=sum(X..offenses))
sum5
euro2dollar <- function(p, tx = 1.34) p * tx
euro2dollar(100)
euro2dollar(100, 1.33)
num_offenses <- function (date = NULL, hour = NULL, beat = NULL, blocrag = NULL, strename = NULL, suff = NULL) {
if (is.null(date) & is.null(hour) & is.null(beat) & is.null(blocrag) & is.null(strename) & is.null(suff))
return("error");
}
num_offenses()
View(i1)
View(i1)
num_offenses <- function (date = NULL, hour = NULL, beat = NULL, blocrag = NULL, strename = NULL) {
if (is.null(date) & is.null(hour) & is.null(beat) & is.null(blocrag) & is.null(strename))
return("error");
else if (is.null(hour) & is.null(beat) & is.null(blocrag) & is.null(strename)) {
result <- sum(filter(dat, date == dat$Date)$X..offenses)
}
return (result)
}
num_offenses <- function (date = NULL, hour = NULL, beat = NULL, blocrag = NULL, strename = NULL) {
if (is.null(date) & is.null(hour) & is.null(beat) & is.null(blocrag) & is.null(strename))
return("error");
else (is.null(hour) & is.null(beat) & is.null(blocrag) & is.null(strename)) {
result <- sum(filter(dat, date == dat$Date)$X..offenses)
}
return (result)
}
num_offenses <- function (date = NULL, hour = NULL, beat = NULL, blocrag = NULL, strename = NULL) {
if (is.null(date) & is.null(hour) & is.null(beat) & is.null(blocrag) & is.null(strename))
return("error");
else (is.null(hour) & is.null(beat) & is.null(blocrag) & is.null(strename)) {
result <- sum(filter(dat, date == dat$Date)$X..offenses)
}
return (result)
}
num_offenses <- function (date = NULL, hour = NULL, beat = NULL, blocrag = NULL, strename = NULL) {
if (is.null(date) & is.null(hour) & is.null(beat) & is.null(blocrag) & is.null(strename))
result <- "error"
else (is.null(hour) & is.null(beat) & is.null(blocrag) & is.null(strename)) {
result <- sum(filter(dat, date == dat$Date)$X..offenses)
}
return (result)
}
filter(dat, date == dat$Date)
date <- "2015-01-24"
filter(dat, date == dat$Date)
filter(dat, date == dat$Date)$X..offenses
sum(filter(dat, date == dat$Date)$X..offenses)
dat[!grep("^[0-9]{4}-[0-9]{2}-[0-9]{2}$", dat$Date),]
dat[!grep("^[0-9]{4}-[0-9]{2}-[0-9]{2}$", dat$Date),] == NULL
num_offenses <- function (date = NULL, hour = NULL, beat = NULL, blocrag = NULL, strename = NULL) {
if (is.null(date) & is.null(hour) & is.null(beat) & is.null(blocrag) & is.null(strename))
result <- "error"
else (is.null(hour) & is.null(beat) & is.null(blocrag) & is.null(strename)) {
result <- sum(filter(dat, date == dat$Date)$X..offenses)
}
return (result)
}
num_offenses <- function (date = NULL, hour = NULL, beat = NULL, blocrag = NULL, strename = NULL) {
if (is.null(date) & is.null(hour) & is.null(beat) & is.null(blocrag) & is.null(strename))
result <- "error"
else  {
result <- sum(filter(dat, date == dat$Date)$X..offenses)
}
return (result)
}
num_offenses <- function (date = NULL, hour = NULL, beat = NULL, blocrag = NULL, strename = NULL) {
if (is.null(date) & is.null(hour) & is.null(beat) & is.null(blocrag) & is.null(strename))
result <- "error"
#date
else if (is.null(hour) & is.null(beat) & is.null(blocrag) & is.null(strename)) {
result <- sum(filter(dat, date == dat$Date)$X..offenses)
}
#hour
else if (is.null(date) & is.null(beat) & is.null(blocrag) & is.null(strename)) {
result <- sum(filter(dat, hour == dat$Hour)$X..offenses)
}
#beat
else if (is.null(date) & is.null(hour) & is.null(blocrag) & is.null(strename)) {
result <- sum(filter(dat, beat == dat$Beat)$X..offenses, na.rm=TRUE)
}
#blockrange
else if (is.null(date) & is.null(hour) & is.null(beat) & is.null(strename)) {
result <- sum(filter(dat, blocrag == dat$BlockRange)$X..offenses, na.rm=TRUE)
}
#streetname
else if (is.null(date) & is.null(hour) & is.null(beat) & is.null(blocrag)) {
result <- sum(filter(dat, strename == dat$StreetName)$X..offenses)
}
return (result)
}
num_offenses(2100-2199)
num_offenses <- function (date = "all", hour = "all", beat = "all", blocrag = "all", strename = "all") {
if (date == "all" & hour == "all" & beat == "all" & blocrag == "all" & strename == "all")
result <- "error"
#date
else if (hour == "all" & beat == "all" & blocrag == "all" & strename == "all") {
result <- sum(filter(dat, date == dat$Date)$X..offenses)
}
#hour
else if (date == "all" & beat == "all" & blocrag == "all" & strename == "all") {
result <- sum(filter(dat, hour == dat$Hour)$X..offenses)
}
#beat
else if (date == "all" & hour == "all" & blocrag == "all" & strename == "all") {
result <- sum(filter(dat, beat == dat$Beat)$X..offenses, na.rm=TRUE)
}
#blockrange
else if (date == "all" & hour == "all" & beat == "all" & strename == "all") {
result <- sum(filter(dat, blocrag == dat$BlockRange)$X..offenses, na.rm=TRUE)
}
#streetname
else if (date == "all" & hour == "all" & beat == "all" & blocrag == "all") {
result <- sum(filter(dat, strename == dat$StreetName)$X..offenses)
}
return (result)
}
num_offenses(all, all, all, 2100-2199, all)
num_offenses("all", "all", "all", 2100-2199, "all")
num_offenses <- function (value, attribute) {
if (attribute == "Date" | attribute == "Hour" | attribute = "Beat" | attribute = "BlockRange" | attribute == "StreetName") {
if (attribute = "Beat" | attribute = "BlockRange")
result <- sum(filter(dat, value == dat$attribute)$X..offenses, na.rm = TRUE)
else
result <- sum(filter(dat, value == dat$attribute)$X..offenses)
}
else
result <- "error"
return(result)
}
num_offenses <- function (value, attribute) {
if (attribute == "Date" | attribute == "Hour" | attribute = "Beat" | attribute = "BlockRange" | attribute == "StreetName") {
if (attribute = "Beat" | attribute = "BlockRange")
result <- sum(filter(dat, value == dat$attribute)$X..offenses, na.rm = TRUE)
else
result <- sum(filter(dat, value == dat$attribute)$X..offenses)
}
else
result <- "error"
return(result)
}
num_offenses <- function (value = NULL, attribute = NULL) {
if (attribute == "Date" | attribute == "Hour" | attribute = "Beat" | attribute = "BlockRange" | attribute == "StreetName") {
if (attribute = "Beat" | attribute = "BlockRange")
result <- sum(filter(dat, value == dat$attribute)$X..offenses, na.rm = TRUE)
else
result <- sum(filter(dat, value == dat$attribute)$X..offenses)
}
else
result <- "error"
return(result)
}
num_offenses <- function (value, attribute) {
if (attribute == "Date" | attribute == "Hour" | attribute = "Beat" | attribute = "BlockRange" | attribute == "StreetName") {
if (attribute = "Beat" | attribute = "BlockRange")
result <- sum(filter(dat, value == dat$attribute)$X..offenses, na.rm = TRUE)
else
result <- sum(filter(dat, value == dat$attribute)$X..offenses)
}
else
result <- "error"
return(result)
}
num_offenses <- function (value, attribute) {
if (attribute == "Date" | attribute == "Hour" | attribute == "Beat" | attribute = "BlockRange" | attribute == "StreetName") {
if (attribute = "Beat" | attribute = "BlockRange")
result <- sum(filter(dat, value == dat$attribute)$X..offenses, na.rm = TRUE)
else
result <- sum(filter(dat, value == dat$attribute)$X..offenses)
}
else
result <- "error"
return(result)
}
num_offenses <- function (value, attribute) {
if (attribute == "Date" | attribute == "Hour" | attribute == "Beat" | attribute == "BlockRange" | attribute == "StreetName") {
if (attribute == "Beat" | attribute == "BlockRange")
result <- sum(filter(dat, value == dat$attribute)$X..offenses, na.rm = TRUE)
else
result <- sum(filter(dat, value == dat$attribute)$X..offenses)
}
else
result <- "error"
return(result)
}
num_offenses(2100-2199, BlockRabge)
num_offenses("2100-2199", "BlockRabge")
num_offenses("2015-01-24", "Date")
sum(filter(dat, 2015-01-24 == dat$Date)$X..offenses)
sum(filter(dat, "2015-01-24" == dat$Date)$X..offenses)
num_offenses("2015-01-24", "Date")
num_offenses("2015-01-24", Date)
num_offenses <- function (value, attribute) {
if (attribute == Date | attribute == "Hour" | attribute == "Beat" | attribute == "BlockRange" | attribute == "StreetName") {
if (attribute == "Beat" | attribute == "BlockRange")
result <- sum(filter(dat, value == dat$attribute)$X..offenses, na.rm = TRUE)
else
result <- sum(filter(dat, value == dat$attribute)$X..offenses)
}
else
result <- "error"
return(result)
}
num_offenses <- function (value, attribute) {
if (attribute == Date | attribute == "Hour" | attribute == "Beat" | attribute == "BlockRange" | attribute == "StreetName") {
if (attribute == "Beat" | attribute == "BlockRange")
result <- sum(filter(dat, value == dat$attribute)$X..offenses, na.rm = TRUE)
else
result <- sum(filter(dat, value == dat$attribute)$X..offenses)
}
else
result <- "error"
return(result)
}
num_offenses("2015-01-24", Date)
colnames(dat)
colnames(dat)[1]
num_offenses <- function (value, attribute) {
if (attribute == colnames(dat)[1] | attribute == colnames(dat)[2] | attribute == colnames(dat)[4] | attribute == colnames(dat)[6] | attribute == colnames(dat)[7]) {
if (attribute == "Beat" | attribute == "BlockRange")
result <- sum(filter(dat, value == dat$attribute)$X..offenses, na.rm = TRUE)
else
result <- sum(filter(dat, value == dat$attribute)$X..offenses)
}
else
result <- "error"
return(result)
}
num_offenses("2015-01-24", Date)
num_offenses <- function (value, attribute) {
if (attribute == "Date" | attribute == "Hour" | attribute == "Beat" | attribute == "BlockRange" | attribute == "StreetName") {
if (attribute == "Beat" | attribute == "BlockRange")
result <- sum(filter(dat, value == dat$attribute)$X..offenses, na.rm = TRUE)
else
result <- sum(filter(dat, value == dat$attribute)$X..offenses)
}
else
result <- "error"
return(result)
}
help("filter")
filter(dat, date == dat$Date, beat == dat$Beat)
filter(dat, date == dat$Date)
num_offenses <- function (beat, date) filter(dat, beat == dat$Beat) %>% filter(dat, date == dat$Date)$X..offenses %>% sum()
num_offenses(10H10, 2015-01-24)
num_offenses("10H10", "2015-01-24")
num_offenses <- function (beat, date) filter(dat, beat == dat$Beat) %>% filter(date == dat$Date)$X..offenses %>% sum()
num_offenses("10H10", "2015-01-24")
num_offenses <- function (beat, date) sum(filter(filter(dat, beat == dat$Beat), date == dat$Date)$X..offenses)
num_offenses("10H10", "2015-01-24")
filter(dat, beat == dat$Beat)
filter(dat, "10H10" == dat$Beat)
filter(filter(dat, "10H10" == dat$Beat), "2015-01-24" == dat$Date)
filter(tbl_df(filter(dat, "10H10" == dat$Beat)), "2015-01-24" == dat$Date)
tbl_df(filter(dat, "10H10" == dat$Beat)
)
goup_by(Beat, Date)
group_by(Beat, Date)
group_by(dat, Beat)
group_by(dat, Beat) %>% group_by(Date)
num_offenses <- function (beat, date) sum(filter(dat, beat == dat$Beat & date == dat$Date)$X..offenses)
num_offenses("10H10", "2015-01-24")
filter(dat, beat == dat$Beat & date == dat$Date
)
filter(dat, beat == dat$Beat & date == dat$Date)
filter(dat, "10H10" == dat$Beat & "2015-01-24" == dat$Date)
dat %>% summarise(avg.Off=mean(dat$X..offenses),
cen.OffTp=centralValue(dat$Offense.Type),
cen.StrNm=centralValue(dat$StreetName))
library(dplyr)
dat %>% summarise(avg.Off=mean(dat$X..offenses),
cen.OffTp=centralValue(dat$Offense.Type),
cen.StrNm=centralValue(dat$StreetName))
install.packages("DMwR")
library(DMwR)
dat %>% summarise(avg.Off=mean(dat$X..offenses),
cen.OffTp=centralValue(dat$Offense.Type),
cen.StrNm=centralValue(dat$StreetName))
=======
sum1 <- group_by(i1, Beat) %>% summarise(num=sum(X..offenses))
sum2 <- group_by(i2, Beat) %>% summarise(num=sum(X..offenses))
sum3 <- group_by(i3, Beat) %>% summarise(num=sum(X..offenses))
group_by(dat, Offense.Type)
group_by(dat, Offense.Type) %>% summarize(total=sum(X..occurences))
group_by(dat, Offense.Type) %>% summarize(total=sum(X..offences))
group_by(dat, Offense.Type) %>% summarize(total=sum(X..offenses))
group_by(dat, Offense.Type) %>% summarize(total=sum(X..offenses))
offenses <- group_by(dat, Offense.Type) %>% summarize(total=sum(X..offenses))
hist(offenses)
hist(offenses$total)
hist(offenses$total)
hist(offenses$total)
barlot(offenses$total, names.arg=offenses$Offense.Type)
barplot(offenses$total, names.arg=offenses$Offense.Type)
offenses <- group_by(dat, Offense.Type) %>%
filter(Offense.Type != 1) %>% summarize(total=sum(X..offenses))
barplot(offenses$total, names.arg=offenses$Offense.Type)
barplot(offenses$total, names.arg=offenses$Offense.Type,
main="Number of occurences per crime type")
>>>>>>> 1bdcc1288775c74c48956a506f542de1923a2210
